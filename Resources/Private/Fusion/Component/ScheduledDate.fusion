prototype(Sitegeist.Bitzer:Component.ScheduledDate) < prototype(Neos.Fusion:Component) {
    constraintCheckResult = null
    command = null

    @context {
        labels = ${Bitzer.Labels.forScheduledDateComponent()}
    }

    renderer = afx`
        <fieldset class="neos-span5">
            <legend>{q(labels).get('task.scheduledTime.label')}</legend>
            <div class={'neos-control-group' + (constraintCheckResult.hasFailedAtPath('scheduledTime') ? ' neos-error' : '')}>
                <label class="neos-control-label" for="title">{q(labels).get('task.scheduledTime.date')}*</label>
                <div class="neos-controls neos-controls-row">
                    <input type="text" required="required" class="neos-span4" id="scheduledTime.date"
                        name="moduleArguments[scheduledTime][date]"
                        placeholder={${Date.format(Date.now(), 'Y-m-d')}}
                        value={${props.command.scheduledTime ? Date.format(props.command.scheduledTime, 'Y-m-d') : null}}
                    />
                </div>
                <Sitegeist.Bitzer:Application.ConstraintCheckMessages constraintCheckResult={props.constraintCheckResult} path="scheduledTime" />
            </div>
            <div class="neos-control-group">
                <label class="neos-control-label" for="title">{q(labels).get('task.scheduledTime.time')}</label>
                <div class="neos-controls neos-controls-row">
                    <input type="text" class="neos-span4" id="scheduledTime.time"
                        name="moduleArguments[scheduledTime][time]"
                        placeholder={${Date.format(Date.now(), 'H:i:s')}}
                        value={${props.command.scheduledTime ? Date.format(props.command.scheduledTime, 'H:i:s') : null}}
                    />
                </div>
            </div>
        </fieldset>`
}
